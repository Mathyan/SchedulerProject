# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 20
      uses: actions/setup-java@v3
      with:
        java-version: '20'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B javadoc:javadoc package --file pom.xml
    - name: Zip Javadocs
      run: zip -r javadocs.zip target/site/apidocs/
    - name: Create Release and Upload Javadocs and JAR
      run: |
        export GH_TOKEN=${{ secrets.GH_PAT }}
        
        REF_NAME=$(echo "${{ github.ref }}" | sed -e 's/refs\/heads\///' -e 's/refs\/tags\///')
        
        if [[ ${{ github.event_name }} == 'push' ]]; then
          RELEASE_NAME="branch-$REF_NAME-$(date +'%Y%m%d%H%M%S')"
        else
          RELEASE_NAME=$REF_NAME
        fi

        JAR_FILE=$(find . -name "*.jar" -type f | grep SNAPSHOT)

        gh release create "$RELEASE_NAME" \
          --title "Release $RELEASE_NAME" \
          --notes "Release notes for $RELEASE_NAME" \
          --attach "$JAR_FILE" \
          --attach javadocs.zip
    - name: Push Javadocs to GitHub Pages
      run: |
        # Configure Git
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        
        # Clone the GitHub Pages repository using the token
        git clone https://${{ secrets.GH_PAT }}@github.com/Mathyan/mathyan.github.io.git gh-pages
        
        # Copy the generated Javadocs to the desired directory
        cp -r target/site/apidocs/* gh-pages/
        
        # Commit and push the changes
        cd gh-pages
        git add .
        git commit -m "Update Javadocs"
        git push